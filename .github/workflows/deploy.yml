name: Build, Push & Deploy Laravel Octane
on:
  push:
    branches: [ main, develop ]
    tags: [ "v*" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64, k8s, ctf]

    env:
      # Pastikan TANPA "https://"
      REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
      IMAGE_NAME:   ${{ secrets.IMAGE_NAME }}
      K8S_NAMESPACE: ${{ secrets.K8S_NAMESPACE }}
      DEPLOYMENT_NAME: ${{ secrets.K8S_DEPLOYMENT_NAME }}
      DOCKER_HOST: tcp://localhost:2375

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute VERSION_TAG
        run: |
          set -euo pipefail
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            VERSION_TAG="${GITHUB_REF_NAME}"                # pakai tag (mis. v1.2.3)
          else
            COMMIT=$(git rev-parse --short HEAD)
            BRANCH="${GITHUB_REF_NAME:-$(git rev-parse --abbrev-ref HEAD)}"
            VERSION_TAG="${BRANCH}-${COMMIT}"
          fi
          echo "VERSION_TAG=$VERSION_TAG" | tee -a "$GITHUB_ENV"

      - name: Fetch docker client (no sudo)
        run: |
          set -euo pipefail
          mkdir -p "$HOME/bin"
          DOCKER_VER=27.1.1
          curl -fsSL -o /tmp/docker.tgz "https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VER}.tgz"
          tar -xzf /tmp/docker.tgz -C /tmp
          install -m 0755 /tmp/docker/docker "$HOME/bin/docker"
          echo "$HOME/bin" >> "$GITHUB_PATH"
          docker version

      - name: Docker login to Harbor
        env:
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          set -euo pipefail
          echo "$REGISTRY_PASSWORD" | docker login "$REGISTRY_URL" -u "$REGISTRY_USERNAME" --password-stdin

      - name: Build & Push image
        run: |
          set -euo pipefail
          docker build -f Swoole.Dockerfile -t "${REGISTRY_URL}/${IMAGE_NAME}:${VERSION_TAG}" .
          docker tag "${REGISTRY_URL}/${IMAGE_NAME}:${VERSION_TAG}" "${REGISTRY_URL}/${IMAGE_NAME}:latest"
          docker push "${REGISTRY_URL}/${IMAGE_NAME}:${VERSION_TAG}"
          docker push "${REGISTRY_URL}/${IMAGE_NAME}:latest"

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.30.0

      - name: Configure kubeconfig
        run: |
          set -euo pipefail
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Rollout Deployment
        run: |
          set -euo pipefail
          kubectl -n "$K8S_NAMESPACE" set image deployment/"$DEPLOYMENT_NAME" \
            app="${REGISTRY_URL}/${IMAGE_NAME}:${VERSION_TAG}"
          kubectl -n "$K8S_NAMESPACE" rollout status deployment/"$DEPLOYMENT_NAME" --timeout=180s
